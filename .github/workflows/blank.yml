# # Importando bibliotecas necessárias
import pygame
import sys

# Inicializando o pygame
pygame.init()

# Configurações iniciais
largura_tela = 800
altura_tela = 600
tela = pygame.display.set_mode((largura_tela, altura_tela))
pygame.display.set_caption("Jogo de Terror 2D")

# Definindo cores
cor_fundo = (0, 0, 0)
cor_personagem = (255, 255, 255)

# Definindo o personagem
personagem = pygame.Rect(50, 50, 50, 50)

# Definindo o movimento do personagem
velocidade = 5

# Loop principal do jogo
while True:
    for evento in pygame.event.get():
        if evento.type == pygame.QUIT:
            pygame.quit()
            sys.exit()

    # Lógica do movimento
    teclas = pygame.key.get_pressed()
    if teclas[pygame.K_LEFT] and personagem.left > 0:
        personagem.x -= velocidade
    if teclas[pygame.K_RIGHT] and personagem.right < largura_tela:
        personagem.x += velocidade
    if teclas[pygame.K_UP] and personagem.top > 0:
        personagem.y -= velocidade
    if teclas[pygame.K_DOWN] and personagem.bottom < altura_tela:
        personagem.y += velocidade

    # Atualizando a tela
    tela.fill(cor_fundo)
    pygame.draw.rect(tela, cor_personagem, personagem)
    pygame.display.flip()

    # Controlando a taxa de atualização
    pygame.time.Clock().tick(30) is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
